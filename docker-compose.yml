version: "3.7"
services:
  # portainer:
  #   image: "portainer/portainer"
  #   container_name: "portainer"
  #   hostname: "portainer"
  #   domainname: "example.com"
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  #     - "portainer_data:/data"
  #   ports:
  #     - "9000:9000"
  # rabbitmq:
  #   image: "rabbitmq"
  #   container_name: "rabbitmq"
  #   hostname: "rabbitmq"
  #   domainname: "example.com"
  #   volumes:
  #     - "rabbitmq_data:/var/lib/rabbitmq"
  # elasticsearch:
  #   image: "elasticsearch:7.1.1"
  #   container_name: "elasticsearch"
  #   hostname: "elasticsearch"
  #   domainname: "example.com"
  #   environment:
  #     - "discovery.type=single-node"
  #   volumes:
  #     - "elasticsearch_data:/usr/share/elasticsearch/data"
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  # node:
  #   image: "node:12"
  #   container_name: "node"
  #   hostname: "node"
  #   domainname: "example.com"
  #   user: "node"
  #   working_dir: "/home/node/app"
  #   environment:
  #     - "NODE_ENV=production"
  #   volumes:
  #     - "./my-app:/home/node/app"
  #   ports:
  #     - "3000:3000"
  #   command: "npm start"
  mongo:
    image: "mongo"
    container_name: "bookdesk-mongodb"
    hostname: "mongo"
    domainname: "example.com"
    restart: "always"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    ports:
      - "27888:27017"
    volumes:
      - "mongo_data:/data/db"
volumes:
  # portainer_data:
  # rabbitmq_data:
  # elasticsearch_data:
  mongo_data:
